Есть два класса, которые выполняют одну и ту же операцию, т.е. пополняют и снимают деньги со счета. 
Разница в том что один класс выполняет поточно пополнение и снятие без синхронизации, а другой с синхронизацией.
У нас есть 4 потока. В первом классе(без синхронизации) есть свойство Money, в методе пополнения у свойства есть условие пока Money меньше 1000, 
в методе снятия условие пока Money больше 200. При таких условиях цикл получается долгий и большой и,
при этом значения свойства непредсказуемые. Потоки друг друга перезатирают.
Во втором классе(с синхронизацией) у свойства Money такие же условия как методах снятия и пополнения 1-го класса. Но в классе стоит заглушка, т.е.
задача принимает только 1 поток, даже если их у нас 4. И работает только с ним, пока не будет удовлетворено условие.
Различие как показало колоссальное,  без синхронизации потоки не взаимодействуют друг с другом, как хотелось бы.
Они выполняют задачу но не видят значаения другого потока. С синхронизацией, принимается 1 поток и, пока он не будет выполнен, другие потоки не запустятся.
 